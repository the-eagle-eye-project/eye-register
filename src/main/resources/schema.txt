use eye_logs;
db;

db.createCollection("eye_logs", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: [
                "transaction_id",
                "application_name",
                "application_step",
                "event_timestamp",
                "request_uri",
                "source_host",
                "transaction_status"
            ],
            properties: {
                transaction_id: {
                    bsonType: "string",
                    description: "Unique ID used to identify and distinct from transactions."
                },
                application_name: {
                    bsonType: "string",
                    description: "Name of the application which this log belongs to."
                },
                application_step: {
                    bsonType: "string",
                    description: "Step of what this log belongs to."
                },
                event_timestamp: {
                    bsonType: "date",
                    description: "When the log was generated."
                },
                request_body: {
                    bsonType: "string",
                    description: "[OPTIONAL] API request body."
                },
                request_uri: {
                    bsonType: "string",
                    description: "Request URI must be a string."
                },
                source_host: {
                    bsonType: "string",
                    description: "Source host must be a string."
                },
                transaction_status: {
                    bsonType: "string",
                    description: "Status of the transaction. [SUCCESS, FAILED, NOT_COMPLETE]"
                }
            }
        }
    }
});


use eye_register;
db;

db.createCollection("eye_logs", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: [
                "integration_id",
                "application_name",
                "application_step",
                "application_type",
                "logs_ttl",
                "is_active",
                "record_created_timestamp",
                "record_created_by"
            ],
            properties: {
                integration_id: {
                    bsonType: "string",
                    description: "Unique identifier that identifies a integration."
                },
                application_name: {
                    bsonType: "string",
                    description: "Name of the application which this log belongs to."
                },
                application_step: {
                    bsonType: "string",
                    description: "Step of what this log belongs to."
                },
                application_type: {
                    bsonType: "date",
                    description: "Type of application."
                },
                related_integration_ids: {
                    bsonType: "array",
                    description: "An array of all the integration ids that are related.",
                    items:{
                        bsonType: "string"
                    }
                },
                logs_ttl: {
                    bsonType: "int",
                    description: "Logs TTL."
                },
                is_active: {
                    bsonType: "bool",
                    description: "Tells if the integration is active or not."
                },
                record_created_timestamp: {
                    bsonType: "date",
                    description: "When the integration record was created."
                },
                record_updated_timestamp: {
                    bsonType: "date",
                    description: "When the integration record was updated."
                },
                record_created_by: {
                    bsonType: "string",
                    description: "When the integration record was created by."
                },
                record_updated_by: {
                    bsonType: "string",
                    description: "When the integration record was updated by."
                }
            }
        }
    }
});